{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js","logo.jpg"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","details","mission_patch_small","links","className","alt","src","classNames","format","slice","to","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","console","log","launches","map","key","LAUNCH_QUERY","Launch","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","logo","style","width","display","margin","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.4c6e4166.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success, details, links:{ mission_patch_small } } }) {\r\n    return (\r\n        < div className=\"p-4 md:w-1/3 sm:mb-0 mb-6 border-solid border-4 border-dark-100\" >\r\n            <div className=\"rounded-lg h-64 overflow-hidden\">\r\n                <img alt=\"Space Ship Image Not Found\" className=\"object-cover object-center h-full w-full\" src={mission_patch_small ? mission_patch_small : \"https://dummyimage.com/1203x503\"} />\r\n            </div>\r\n            <h2 className=\"text-2xl font-medium title-font text-gray-900 mt-5\">Mission: <span className={classNames({ 'text-success': launch_success, 'text-danger':!launch_success})}>{mission_name}</span></h2>\r\n            <p className=\"mb-2\">Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment></p>\r\n            <p className=\"text-base leading-relaxed mt-2\">{details ? details.slice(0,150)+'...' : \"Details not available...\"}</p>\r\n            <Link to={`/launch/${flight_number}`} className=\"text-indigo-500 inline-flex items-center mt-3\">Launch Details\r\n                <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-4 h-4 ml-2\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\r\n                </svg>\r\n            </Link>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LaunchItem\r\n","import React from 'react'\r\n\r\nfunction MissionKey() {\r\n    return (\r\n        <div className=\"mb-5\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\"></span> Sucess\r\n              \r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\"></span> Failure\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MissionKey\r\n","import React from 'react'\r\nimport { useQuery, gql } from '@apollo/client'\r\nimport LaunchItem from './LaunchItem'\r\nimport MissionKey from './MissionKey'\r\n\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n    query LanuchesQuery {\r\n        launches {\r\n            flight_number\r\n            mission_name\r\n            launch_date_local\r\n            launch_success\r\n            details\r\n            links{\r\n                mission_patch_small\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\nfunction Launches() {\r\n    const { loading, error, data } = useQuery(LAUNCHES_QUERY)\r\n\r\n    if (loading) return <h4 className=\"text-center\">Loading...</h4>\r\n\r\n    if (error) console.log(error)\r\n    return (\r\n        <>\r\n            <section className=\"text-gray-700 body-font\">\r\n                <div className=\"container px-5 py-24 mx-auto\">\r\n                    <div className=\"flex flex-col\">\r\n                        <div className=\"h-1 bg-gray-200 rounded overflow-hidden\">\r\n                            <div className=\"w-24 h-full bg-indigo-500\"></div>\r\n                        </div>\r\n                        <div className=\"flex flex-wrap sm:flex-row flex-col py-6 mb-6\">\r\n                            <h1 className=\"sm:w-2/5 text-gray-900 font-medium title-font text-2xl mb-2 sm:mb-0\">Launching Histories</h1>\r\n                            <p className=\"sm:w-3/5 leading-relaxed text-base sm:pl-10 pl-0\">Space Exploration Technologies Corp., trading as SpaceX, is an American aerospace manufacturer and space transportation services company headquartered in Hawthorne, California. It was founded in 2002 by Elon Musk with the goal of reducing space transportation costs to enable the colonization of Mars.</p>\r\n                        </div>\r\n                    </div>\r\n                    <MissionKey/>\r\n                    <div className=\"flex flex-wrap sm:-m-4 -mx-4 -mb-10 -mt-4\">\r\n                    \r\n                        {\r\n                             data.launches.map(launch => <LaunchItem key={launch.flight_number} launch={launch} />)\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Launches\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ","import React from 'react'\r\nimport { useQuery, gql } from '@apollo/client'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst LAUNCH_QUERY = gql`\r\n    query LaunchQuery($flight_number:Int!) {\r\n        launch(flight_number: $flight_number) {\r\n            flight_number\r\n            mission_name\r\n            launch_year\r\n            launch_success\r\n            launch_date_local\r\n            details\r\n            links{\r\n                mission_patch_small\r\n            }\r\n            rocket {\r\n                rocket_id\r\n                rocket_name\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction Launch(props) {\r\n\r\n    let { flight_number } = props.match.params\r\n    flight_number = parseInt(flight_number)\r\n\r\n    const { loading, error, data } = useQuery(LAUNCH_QUERY, { variables: { flight_number } })\r\n\r\n    if (loading) return <h4 className=\"text-center\">Loading...</h4>\r\n\r\n    if (error) console.log(error)\r\n\r\n    const { mission_name, launch_year, launch_success, details, links: { mission_patch_small }, rocket: { rocket_id, rocket_name, rocket_type } } = data.launch\r\n    return (\r\n\r\n        <section className=\"text-gray-700 body-font\">\r\n            <div className=\"container px-5 py-24 mx-auto flex flex-col\">\r\n                <div className=\"lg:w-4/6 mx-auto\">\r\n                    <div className=\"rounded-lg h-80 overflow-hidden\">\r\n                        <img alt=\"content\" className=\"object-cover object-center h-full w-full\" src={mission_patch_small ? mission_patch_small : \"https://dummyimage.com/1203x503\"} />\r\n                    </div>\r\n                    <div className=\"flex flex-col sm:flex-row mt-10\">\r\n                        <div className=\"sm:w-1/3 text-center sm:pr-8 sm:py-8\">\r\n                            \r\n                            <div className=\"flex flex-col items-center text-center justify-center\">\r\n                                <h2 className=\"font-medium title-font mt-4 text-gray-900 text-4xl\"><span className=\"text-dark\">Mission: </span>{mission_name}</h2>\r\n                                <div className=\"w-12 h-1 bg-indigo-500 rounded mt-2 mb-4\"></div>\r\n                                <p className=\"text-2xl text-gray-600\">{launch_year}</p>\r\n                                <p className=\"text-2xl text-gray-600\">Launch Success:  <span className={classNames({\r\n                                    'text-success':launch_success,\r\n                                    'text-danger': !launch_success\r\n                                })}>{launch_success ? 'YES': 'NO'}</span></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sm:w-2/3 sm:pl-8 sm:py-8 sm:border-l border-gray-300 sm:border-t-0 border-t mt-4 pt-4 sm:mt-0 text-center sm:text-left\">\r\n                            <p className=\"leading-relaxed text-lg mb-4\">{details ? details : \"Details not available...\"}</p>\r\n                            <h4 className=\"mt-3 text-3xl text-gray-900 text-left\">Rocket Details</h4>\r\n                            <div className=\"w-20 h-1 bg-indigo-500 rounded mt-2 mb-4\"></div>\r\n                            <ul className=\"list-group mt-2\">\r\n                                <li className=\"list-group-item text-2xl \">Rocket ID: <span className=\"text-purple-600\">{rocket_id}</span></li>\r\n                                <li className=\"list-group-item text-2xl \">Rocket Name:<span className=\"text-purple-600\">{rocket_name}</span> </li>\r\n                                <li className=\"list-group-item text-2xl \">Rocket Type: <span className=\"text-purple-600\">{rocket_type}</span></li>\r\n                            </ul>\r\n                            <Link to=\"/\" className=\"text-indigo-500 inline-flex items-center mt-2\">Back\r\n                                <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" className=\"w-4 h-4 ml-2\" viewBox=\"0 0 24 24\">\r\n                                    <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\r\n                                </svg>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Launch\r\n\r\n\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport './App.css'\nimport logo from './logo.jpg'\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n  \n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img src={logo} alt=\"SpaceX\" style={{ width: '300px', display: 'block', margin: '1rem auto' }} />\n          <Switch>\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.28aa741f.jpg\";"],"sourceRoot":""}